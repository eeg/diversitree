-*-org-*-
There are a great many things left to do.

* Arising from the cleanup

** Simulation code
This is a complete mess.  When I merge in the SCM code, some time
tidying this would be useful.

* Architectural changes
** Generalise the MCMC
This is started to some degree 
  - mcmc() is generic
  - different samplers are supported

Better support is possible for multivariate updates, or for updating
out of non-continuous distributions (e.g. node choices on a tree).

Returning a more generic "MCMC" object that improves upon a data.frame
might be nice.  There is no good storage reason to be adding the 'i'
column, for example - this might be better handled virtually.  The
'coda' package already has an MCMC format.  I could use this, but then
I would clash the 'mcmc' function with their package.  It does not
appear too useful.

* Feature additions
** Statistical support
*** Confidence intervals/ellipses from Hessians
This code is tied up in the mammals analysis at the moment, but might
be nice to combine for everyone's use.

*** Computing Hessians
It would be nice to able to compute Hessian matrices after the fact,
and/or just for certain parameters.

** Nicities

make.bisse, make.mkn, make.musse, etc should take a factor with the
correct number of levels, and rewrite argnames appropriately.

* Documentation
** Tutorial document
Plot QuaSSE fits, as there has been some confusion about these.  A
"plot" method might be useful, even.

* Misc old bits:
** Summarise stochastic asr data
For example, which branches have transitions and where?
** Mk2/Mkn simulation conditional on a tree
This is very similar to the stochastic character mapping mk2, but
allowing anything.
** BM simulation conditional on a tree
** Stochastic character mapping for k states
** ASR/SCM-BiSSE should allow sampling.f and unresolved clades
Nothing changes for sampling.f - should be trivial

For unresolved clades, just do not reconstruct along the unresolved
clades?
** DONE Constant-rate BD model should allow sampling.f, unresolved and conditioning
The code for doing the unresolved case is now in MEDUSA2, and the
equations for the sampling.f case are easy.  Conditioning on survival
is done.
** Constant-rate BD model constant of proportionality wrong
when unresolved clades are used.  lfactorial(N-1) should be
lfactorial(N - 1 + sum(unresolved-1))
** Fix BD likelihoods for lambda = mu
There is a limit equation for lambda == mu; find this and replace.  It
turns up every so often and is annoying (most likely when doing
grid searches)

For now, I have hacked this by increasing lambda by 1e-12 whenever
this is met.
** Standardise arguments a bit
I see tip.state, tip.states and states between various functions, and
tree vs phy.  Standardise, by copying from make.bisse
** DONE Abstract checking functions
The LL and ASR functions all do basically the same tests; pull that
out into a 'check' function within model-foo.R?
** DONE starting.point.bisse() should use find.mle(make.bd(...), ...)
Ape's version crashes too much
** DONE profiles.plot() should have accurate width of filled regions
As suggested by Sally
** DONE Expose prune() and use in examples
** DONE bisse.ode
Pull make.ode into the bisse likelihood function the same as the
k-state ODE functions.
** Performance optimisation
Here is a worrying profile output from running a BiSSE MCMC
on a small tree:

$by.self
                     self.time self.pct total.time total.pct
".Call"                   7.02     12.6       7.02      12.6
"branches"                6.38     11.5      35.64      64.1
"all.branches"            5.30      9.5      54.38      97.8
"initial.conditions"      5.28      9.5       5.82      10.5
"bisse.ode"               5.22      9.4      14.78      26.6
"rowSums"                 5.04      9.1       7.98      14.3
"t"                       4.18      7.5      19.70      35.4
"inherits"                1.88      3.4       1.94       3.5
"as.character"            1.36      2.4       1.36       2.4
"cbind"                   0.96      1.7       0.98       1.8
"unique"                  0.74      1.3       1.86       3.3
"tapply"                  0.62      1.1       6.34      11.4
"t.default"               0.58      1.0       0.58       1.0
"unique.default"          0.56      1.0       1.10       2.0
"prod"                    0.48      0.9       0.48       0.9
"*"                       0.46      0.8       0.46       0.8
"levels"                  0.44      0.8       0.52       0.9
"<"                       0.42      0.8       0.42       0.8
"all"                     0.42      0.8       0.42       0.8
"factor"                  0.40      0.7       4.64       8.3
"-"                       0.40      0.7       0.40       0.7
">"                       0.40      0.7       0.40       0.7
"!"                       0.38      0.7       0.38       0.7
"root.xxsse"              0.36      0.6       0.44       0.8
"sort"                    0.26      0.5       2.14       3.8
"eval"                    0.26      0.5       1.32       2.4
"match"                   0.26      0.5       0.64       1.2
"which"                   0.22      0.4       0.30       0.5
"as.vector"               0.22      0.4       0.26       0.5
"switch"                  0.22      0.4       0.24       0.4
"match.arg"               0.20      0.4       1.84       3.3
"pmatch"                  0.20      0.4       0.22       0.4
"is.finite"               0.20      0.4       0.20       0.4
"length"                  0.20      0.4       0.20       0.4
"sort.int"                0.18      0.3       1.48       2.7
"deparse"                 0.18      0.3       0.96       1.7
"is.factor"               0.18      0.3       0.76       1.4
"is.data.frame"           0.16      0.3       1.22       2.2
"=="                      0.16      0.3       0.16       0.3
".deparseOpts"            0.14      0.3       0.46       0.8
"/"                       0.14      0.3       0.14       0.3
"is.na"                   0.14      0.3       0.14       0.3
"sort.list"               0.12      0.2       1.06       1.9
":"                       0.12      0.2       0.12       0.2
"storage.mode<-"          0.12      0.2       0.12       0.2
"matrix"                  0.10      0.2       0.12       0.2
">="                      0.10      0.2       0.10       0.2
"identical"               0.10      0.2       0.10       0.2
"g"                       0.08      0.1      55.34      99.5
"ll.bisse"                0.08      0.1      55.02      98.9
"as.integer"              0.08      0.1       0.08       0.1
"cat"                     0.08      0.1       0.08       0.1
"is.numeric"              0.08      0.1       0.08       0.1
"levels.default"          0.08      0.1       0.08       0.1
"list"                    0.08      0.1       0.08       0.1
"sys.parent"              0.08      0.1       0.08       0.1
"f"                       0.06      0.1      55.26      99.4
"sort.default"            0.06      0.1       1.54       2.8
"formals"                 0.06      0.1       0.18       0.3
"!="                      0.06      0.1       0.06       0.1
"is.array"                0.06      0.1       0.06       0.1
"is.null"                 0.06      0.1       0.06       0.1
"sum"                     0.06      0.1       0.06       0.1
"vector"                  0.06      0.1       0.06       0.1
"tryCatchOne"             0.04      0.1      55.12      99.1
"doTryCatch"              0.04      0.1      55.08      99.0
"integer"                 0.04      0.1       0.06       0.1
"mode"                    0.04      0.1       0.06       0.1
"^"                       0.04      0.1       0.04       0.1
"+"                       0.04      0.1       0.04       0.1
"class<-"                 0.04      0.1       0.04       0.1
"cleanup"                 0.04      0.1       0.04       0.1
"is.character"            0.04      0.1       0.04       0.1
"levels<-"                0.04      0.1       0.04       0.1
"make.branches"           0.04      0.1       0.04       0.1
"parent.frame"            0.04      0.1       0.04       0.1
"rep.int"                 0.04      0.1       0.04       0.1
"mcmc"                    0.02      0.0      55.62     100.0
"slice.nd"                0.02      0.0      55.50      99.8
"isolate.step"            0.02      0.0      32.50      58.4
"take.sample"             0.02      0.0      22.94      41.2
"as.factor"               0.02      0.0       4.74       8.5
"setdiff"                 0.02      0.0       0.44       0.8
"%in%"                    0.02      0.0       0.34       0.6
"sys.function"            0.02      0.0       0.10       0.2
"is.ordered"              0.02      0.0       0.06       0.1
"names<-"                 0.02      0.0       0.04       0.1
"("                       0.02      0.0       0.02       0.0
"any"                     0.02      0.0       0.02       0.0
"baseenv"                 0.02      0.0       0.02       0.0
"dim"                     0.02      0.0       0.02       0.0
"dimnames"                0.02      0.0       0.02       0.0
"environment"             0.02      0.0       0.02       0.0
"is.complex"              0.02      0.0       0.02       0.0
"is.list"                 0.02      0.0       0.02       0.0
"is.name"                 0.02      0.0       0.02       0.0
"is.pairlist"             0.02      0.0       0.02       0.0
"min"                     0.02      0.0       0.02       0.0
"ncol"                    0.02      0.0       0.02       0.0
"rexp"                    0.02      0.0       0.02       0.0
"runif"                   0.02      0.0       0.02       0.0
"typeof"                  0.02      0.0       0.02       0.0
"unlist"                  0.02      0.0       0.02       0.0
"slice.1d"                0.00      0.0      55.48      99.7
"try"                     0.00      0.0      55.16      99.2
"tryCatch"                0.00      0.0      55.16      99.2
"tryCatchList"            0.00      0.0      55.14      99.1
"xxsse.ll"                0.00      0.0      54.86      98.6
"nlevels"                 0.00      0.0       0.26       0.5
"force"                   0.00      0.0       0.06       0.1
"array"                   0.00      0.0       0.02       0.0
"as.data.frame"           0.00      0.0       0.02       0.0
"sapply"                  0.00      0.0       0.02       0.0

$by.total
                     total.time total.pct self.time self.pct
"mcmc"                    55.62     100.0      0.02      0.0
"slice.nd"                55.50      99.8      0.02      0.0
"slice.1d"                55.48      99.7      0.00      0.0
"g"                       55.34      99.5      0.08      0.1
"f"                       55.26      99.4      0.06      0.1
"try"                     55.16      99.2      0.00      0.0
"tryCatch"                55.16      99.2      0.00      0.0
"tryCatchList"            55.14      99.1      0.00      0.0
"tryCatchOne"             55.12      99.1      0.04      0.1
"doTryCatch"              55.08      99.0      0.04      0.1
"ll.bisse"                55.02      98.9      0.08      0.1
"xxsse.ll"                54.86      98.6      0.00      0.0
"all.branches"            54.38      97.8      5.30      9.5
"branches"                35.64      64.1      6.38     11.5
"isolate.step"            32.50      58.4      0.02      0.0
"take.sample"             22.94      41.2      0.02      0.0
"t"                       19.70      35.4      4.18      7.5
"bisse.ode"               14.78      26.6      5.22      9.4
"rowSums"                  7.98      14.3      5.04      9.1
".Call"                    7.02      12.6      7.02     12.6
"tapply"                   6.34      11.4      0.62      1.1
"initial.conditions"       5.82      10.5      5.28      9.5
"as.factor"                4.74       8.5      0.02      0.0
"factor"                   4.64       8.3      0.40      0.7
"sort"                     2.14       3.8      0.26      0.5
"inherits"                 1.94       3.5      1.88      3.4
"unique"                   1.86       3.3      0.74      1.3
"match.arg"                1.84       3.3      0.20      0.4
"sort.default"             1.54       2.8      0.06      0.1
"sort.int"                 1.48       2.7      0.18      0.3
"as.character"             1.36       2.4      1.36      2.4
"eval"                     1.32       2.4      0.26      0.5
"is.data.frame"            1.22       2.2      0.16      0.3
"unique.default"           1.10       2.0      0.56      1.0
"sort.list"                1.06       1.9      0.12      0.2
"cbind"                    0.98       1.8      0.96      1.7
"deparse"                  0.96       1.7      0.18      0.3
"is.factor"                0.76       1.4      0.18      0.3
"match"                    0.64       1.2      0.26      0.5
"t.default"                0.58       1.0      0.58      1.0
"levels"                   0.52       0.9      0.44      0.8
"prod"                     0.48       0.9      0.48      0.9
"*"                        0.46       0.8      0.46      0.8
".deparseOpts"             0.46       0.8      0.14      0.3
"root.xxsse"               0.44       0.8      0.36      0.6
"setdiff"                  0.44       0.8      0.02      0.0
"<"                        0.42       0.8      0.42      0.8
"all"                      0.42       0.8      0.42      0.8
"-"                        0.40       0.7      0.40      0.7
">"                        0.40       0.7      0.40      0.7
"!"                        0.38       0.7      0.38      0.7
"%in%"                     0.34       0.6      0.02      0.0
"which"                    0.30       0.5      0.22      0.4
"as.vector"                0.26       0.5      0.22      0.4
"nlevels"                  0.26       0.5      0.00      0.0
"switch"                   0.24       0.4      0.22      0.4
"pmatch"                   0.22       0.4      0.20      0.4
"is.finite"                0.20       0.4      0.20      0.4
"length"                   0.20       0.4      0.20      0.4
"formals"                  0.18       0.3      0.06      0.1
"=="                       0.16       0.3      0.16      0.3
"/"                        0.14       0.3      0.14      0.3
"is.na"                    0.14       0.3      0.14      0.3
":"                        0.12       0.2      0.12      0.2
"storage.mode<-"           0.12       0.2      0.12      0.2
"matrix"                   0.12       0.2      0.10      0.2
">="                       0.10       0.2      0.10      0.2
"identical"                0.10       0.2      0.10      0.2
"sys.function"             0.10       0.2      0.02      0.0
"as.integer"               0.08       0.1      0.08      0.1
"cat"                      0.08       0.1      0.08      0.1
"is.numeric"               0.08       0.1      0.08      0.1
"levels.default"           0.08       0.1      0.08      0.1
"list"                     0.08       0.1      0.08      0.1
"sys.parent"               0.08       0.1      0.08      0.1
"!="                       0.06       0.1      0.06      0.1
"is.array"                 0.06       0.1      0.06      0.1
"is.null"                  0.06       0.1      0.06      0.1
"sum"                      0.06       0.1      0.06      0.1
"vector"                   0.06       0.1      0.06      0.1
"integer"                  0.06       0.1      0.04      0.1
"mode"                     0.06       0.1      0.04      0.1
"is.ordered"               0.06       0.1      0.02      0.0
"force"                    0.06       0.1      0.00      0.0
"^"                        0.04       0.1      0.04      0.1
"+"                        0.04       0.1      0.04      0.1
"class<-"                  0.04       0.1      0.04      0.1
"cleanup"                  0.04       0.1      0.04      0.1
"is.character"             0.04       0.1      0.04      0.1
"levels<-"                 0.04       0.1      0.04      0.1
"make.branches"            0.04       0.1      0.04      0.1
"parent.frame"             0.04       0.1      0.04      0.1
"rep.int"                  0.04       0.1      0.04      0.1
"names<-"                  0.04       0.1      0.02      0.0
"("                        0.02       0.0      0.02      0.0
"any"                      0.02       0.0      0.02      0.0
"baseenv"                  0.02       0.0      0.02      0.0
"dim"                      0.02       0.0      0.02      0.0
"dimnames"                 0.02       0.0      0.02      0.0
"environment"              0.02       0.0      0.02      0.0
"is.complex"               0.02       0.0      0.02      0.0
"is.list"                  0.02       0.0      0.02      0.0
"is.name"                  0.02       0.0      0.02      0.0
"is.pairlist"              0.02       0.0      0.02      0.0
"min"                      0.02       0.0      0.02      0.0
"ncol"                     0.02       0.0      0.02      0.0
"rexp"                     0.02       0.0      0.02      0.0
"runif"                    0.02       0.0      0.02      0.0
"typeof"                   0.02       0.0      0.02      0.0
"unlist"                   0.02       0.0      0.02      0.0
"array"                    0.02       0.0      0.00      0.0
"as.data.frame"            0.02       0.0      0.00      0.0
"sapply"                   0.02       0.0      0.00      0.0

$sampling.time
[1] 55.62

Only 12.6% of the time is spent in .Call!
Much of this is probably going to be very hard to get back, based on
things like the difference between bisse.ode and .Call (26.6% vs
12.6).  Look at the contents of bisse.ode:

    if (!is.numeric(y)) 
        stop("`y' must be numeric")
    if (!is.numeric(times)) 
        stop("`times' must be numeric")
    storage.mode(y) <- storage.mode(times) <- "double"
    .Call("call_lsoda", y, times, Func, parms, rtol, atol, NULL, 
        NULL, JacFunc, ModelInit, INTZERO, INTONE, rwork, iwork, 
        INTTWO, INTZERO, lrw, liw, INTONE, NULL, INTZERO, 0, 
        INTZERO, INTZERO, flist, PACKAGE = "deSolve")

Two 'if' statements plus an fairly efficient coersion account for
about 13% of the total computational time!
** DONE Clade tree plot is a total hack
n.tip etc not consistent with the phylo plots

Move over to use plot-alt, as there is substantial duplication here.
** DONE Examples take too long to run
I need to check that the examples need to be as long as they currently
are.

** DONE asr methods for Mkn
All of the current methods for Mk2 should translate trivially
over to Mkn.
** DONE mle/protect
I have moved protect inside the mle search functions, but I need to
(A) pull protect out of all the other functions! (done-but check)
(B) add something similar for mcmc (pending)
** DONE Yule trees
Simulation is easy; just interface with the existing CR-BD code with
mu=0 (should be minimal inefficiency from this).  Some ML stuff can be
done by setting mu=0, but doing find.mle can be done analytically.
** DONE Check documentation - has not been done in some time!
  - argnames.Rd: OK, one TODO pending.
  - big.brother.Rd: OK
  - constrain.Rd: OK.  Reasonable examples, short execution time.
  - find.mle.Rd: OK.  Long running (30s) disabled example
  - make.bd.Rd: OK.  Slightly long (3s) example.
  - make.bisse.Rd: OK.  Long example (30s) enabled, v. long example disabled
  - make.clade.tree.Rd: Rewrite after finishing clade tree stuff
  - make.mkn.Rd: 2s examples enabled, mkn pending.
  - make.prior.Rd: Done (but very brief)
  - mcmc.Rd: Done (but a little brief).  All examples supressed.
  - plot.history.Rd: Done (brief)
  - profiles.plot.Rd: Done (very brief)
  - protect.Rd: OK, marked internal now.
  - simulate.Rd: Done (too brief, really).

** constrain broken where constraining against variables
Constrain is broken where constraining against a variable.

** constrain and rename simulataneously
The expression
  foo ~ bar | baz
should constrain foo equal to bar and call the new variable baz.
This would enable
  lambda0 ~ lambda1 | lambda
This is not a high priority.  As a stopgap measure I have allowed
constraining against "Extra" parameters.  But I will try this soon.

Looking at the parsing of expressions:
  eq <- a ~ b + c | d
  rhs <- eq[[3] ] # (as already done)
  rhs[[1] ] # -> |, which makes it easy to check.

According to Precedence rules (?Syntax) nothing except for ~ binds
more loosely than '|', so aside from parentheses, this is the way to go.

** DONE Error message when wrong parameter length given
The error message when the wrong length parameter is given is
uninformative for many functions:
  BiSSE returns -Inf, when it should throw an error (FIXED)
  BDP2 bails within the branches code
  constrain says that 'x is of wrong length', but does not say what
    that should be (FIXED)
Try to unify this.
** DONE Option for sequential tests in ANOVA?
Rather than just do against full model, run the tests sequentially?
This might be useful once stepAIC done
** Do stepAIC/stepLRT for model development - see hiv-test.R for example.
** DONE Check MLE starting point is OK
If starting point fails, optimisation appears to proceed still.
** DONE Remove first "pars" argument from do.asr.joint(); it is not needed.
** DONE Box constraints for subplex
Useful where optimisation goes off into silly spaces.
** DONE Catch Flag: 1
In R/model-bisse-unresolved.R, where flag > 0, throw an error.

I think this is done now?

** DONE ASR node labels
The handling of node labels is inconsistent; asr.marginal does not add
them while the other functions do.  Add argument 'label' that toggles
whether they are added perhaps?

fixed- I just removed them...

** diversitree.unrel below here.
*** DONE GEMM clear-up
I use different do_gemm functions in diversitree and
diversitree_unrel; it would be good to use the same one with a
configurable "beta" parameter.

*** asr methods for MuSSE
All of the current methods for BiSSE should translate trivially
over to MuSSE.
** DONE unresolved and preset
These basically do the same thing and I should probably merge things
to make this more robust.
** DONE Rewrite the tutorial document
